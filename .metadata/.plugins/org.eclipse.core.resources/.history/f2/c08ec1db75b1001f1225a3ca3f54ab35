package com.javaexpress.jobms.job.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.javaexpress.jobms.job.bean.Job;
import com.javaexpress.jobms.job.dto.JobWithCompanyDTO;
import com.javaexpress.jobms.job.external.Company;
import com.javaexpress.jobms.job.repository.JobRepository;

@Service
public class JobServiceImpl implements JobService {

	@Autowired
	private JobRepository jobRepository;
	
	
	@Override
	public List<JobWithCompanyDTO> findAll() {
		
		RestTemplate restTemplate = new RestTemplate();
		List<Job> jobs = jobRepository.findAll();
		List<JobWithCompanyDTO>  jobWithCompanyDTOs = new ArrayList<JobWithCompanyDTO>();
		for(Job job: jobs) {
			JobWithCompanyDTO jobWithCompanyDTO = new JobWithCompanyDTO();
			jobWithCompanyDTO.setJob(job);		
			Company company = restTemplate.getForObject("http://companyms:8081/companies/"+job.getCompanyId(), Company.class);
			jobWithCompanyDTO.setCompany(company);
			jobWithCompanyDTOs.add(jobWithCompanyDTO);
		}	
		
		return jobWithCompanyDTOs;
	}


	@Override
	public Job createJob(Job job) {
		
		return jobRepository.save(job);
	}


	@Override
	public Job getJobById(Long id) {
		
		return jobRepository.findById(id).orElse(null);
	}


	@Override
	public void deleteJobById(Long id) {
		
		jobRepository.deleteById(id);
	}


	@Override
	public boolean updateJobById(Long id, Job updatedJob) {
		Optional<Job> jobOptional = jobRepository.findById(id);

		if (jobOptional.isPresent()) {
			Job job = jobOptional.get();
			job.setDescription(updatedJob.getDescription());
			job.setLocation(updatedJob.getLocation());
			job.setMaxSalary(updatedJob.getMaxSalary());
			job.setMinSalary(updatedJob.getMinSalary());
			job.setTitle(updatedJob.getTitle());
			jobRepository.save(job);
			return true;
		}

		return false;
	}

}
